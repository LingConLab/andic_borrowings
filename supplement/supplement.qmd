---
title: "Supplementary materials to the paper 'Adaptation of Russian borrowings in Andic languages'"
date: "today"
date-format: "D.MM.YYYY"
format:
  pdf:
    number-sections: true
    toc: true
    df-print: kable
    pdf-engine: xelatex
    mainfont: Brill
    monofont: Iosevka
    mathfont: Brill
editor_options: 
  chunk_output_type: console
fig-height: 5
fig-width: 7
warnings: false
message: false
bibliography: bibliography.bib
nocite: |
  @ggeffects @inspectdf @quarto @tidyverse
---

```{r}
#| include: false

# setwd("/home/agricolamz/work/articles/2025_russian_borrowings_in_andi_with_Vika_Chiara/supplement")

library(tidyverse)
library(lme4)
theme_set(theme_minimal() + theme(text = element_text(size = 16)))

read_csv("../check_me.csv") |> 
  select(language, reference, meaning_ru, russian_ipa, target_ipa, change, total, changes, year) |>
  mutate(year = case_when(year == "0" ~ "pre-Soviet",
                            year == "1" ~ "Soviet",
                            year == "2" ~ "Soviet"),
         change = if_else(change == "1", "change present", "no change")) |> 
  rename(dictionary_translation = meaning_ru, 
         time_of_borrowing = year) |> 
  write_csv("data.csv", na = "")
```


## Data

Read the dataset. The whole document is based on manipulations of different parts of the same dataset.

```{r}
library(tidyverse)

read_csv("data.csv", show_col_types = FALSE) |> 
  mutate(language_ref = str_c(language, ": ", reference)) ->
  df
```

The dataset consists of `r nrow(df)` observations with the following columns:

- `language`: language
- `reference`: source of data
- `dictionary_translation`: unified dictinary translation 
- `russian_ipa`: IPA transcription of russian word or part of the word with some modifications;
- `target_ipa`: IPA transcription of target language word;
- `change`: coding for the change;
- `total`: total number of units in the analysis;
- `changes`: number of observed changes;
- `time_of_borrowing`: time of borrowing approximated using Russian National Corpus.

Here is a most frequent values in the subsample of variables (variables `dictionary_translation`, `russian_ipa` and `target_ipa` are ommited due to the huge amount of values).

```{r}
#| eval: false

library(inspectdf)

df |> 
  mutate_all(as.factor) |> 
  select(language, reference, change, total, changes, time_of_borrowing) |> 
  rename(`(1.1) language` = language,
         `(1.2) reference` = reference,
         `(1.3) change` = change,
         `(1.4) total units per word` = total,
         `(1.5) changes per word` = changes,
         `(1.6) time of borrowing` = time_of_borrowing) |> 
  inspect_cat()   |> 
  show_plot()+
  labs(title = NULL, subtitle = NULL, text = element_text(size = 30))+
  theme(axis.text.y = element_text(hjust = 0))
```

```{r}
#| fig-cap: "Frequency of values for each variable in the dataset. Gray segments are missing values."
#| out-width: 100%
#| echo: false
#| warning: false

library(inspectdf)

df |> 
  mutate_all(as.factor) |> 
  select(language, reference, change, total, changes, time_of_borrowing) |> 
  rename(`(1.1) language` = language,
         `(1.2) reference` = reference,
         `(1.3) change` = change,
         `(1.4) total units per word` = total,
         `(1.5) changes per word` = changes,
         `(1.6) time of borrowing` = time_of_borrowing) |> 
  inspect_cat()   |> 
  show_plot()+
  labs(title = NULL, subtitle = NULL, text = element_text(size = 30))+
  theme(axis.text.y = element_text(hjust = 0)) ->
  df_structure
ggsave("df_structure.png", plot = df_structure, width = 9, height = 7, 
       bg = "white")
knitr::include_graphics("df_structure.png")
```

## Distribution of changes across languages

## Modeling {#sec-modeling}

We decided to create a model that predicts the average number of changes based on the resource and approximated time of borrowing. We applied a mixed effect logistic regression model. The models were generated with the R [@r] package `lme4` [@bates15] with the following formula:

```
change ~ (language resource):approximated time of borrowing + (1|dictionary lemma translation)
```

The random effect of the model is unified dictionary lemma translation. We included in the model interaction of two variables: language resource and approximated time of borrowing. Since this model will compare values with some baseline Soviet borrowings from Avar dictionary (Gimbatov 2006) were used as a baseline. All language resources turn out to be statistically significantly different from Avar. Approximated time of borrowing turned out not to be statistically significant (p-value = 0.112855).

```{r}
library(lme4)
library(lmerTest)

df |> 
  mutate(change = if_else(change == "no change", 0, 1),
         time_of_borrowing = fct_relevel(time_of_borrowing, "Soviet"),
         language_ref = fct_relevel(language_ref, "Avar: Gimbatov 2006")) |> 
  lmer(change ~ time_of_borrowing*language_ref + (1|dictionary_translation), data = _) ->
  fit

summary(fit)
```

The model predictions are visualized with effect plots.

```{r}
#| eval: false

library(ggeffects)
  
df |> 
    distinct(language_ref, dictionary_translation) |> 
    count(language_ref) |> 
    rename(x = language_ref,
           word_list_size = n) ->
    word_list_size
  
fit |> 
  ggpredict(terms = c("language_ref", "time_of_borrowing")) |> 
  as_tibble() |>
  left_join(word_list_size) |> 
  mutate(x = str_c(x, " (", word_list_size, " lemmata)"),
         x = fct_reorder(x, predicted)) |> 
  ggplot(aes(predicted, x, color = group))+
  geom_linerange(aes(xmin = conf.low, xmax = conf.high), position = position_dodge(width = 0.5)) +
  geom_point(show.legend = FALSE, position = position_dodge(width = 0.5))+
  theme_minimal()+
  labs(x = "model prediction of the probability of change", 
       y = NULL,
       color = NULL)+
  theme(text = element_text(size = 16),
        legend.position = "bottom")
```

```{r}
#| label: "fig-model-predictions1"
#| fig-cap: "Probabilities of change by language, source and approximated time of borrowing"
#| warning: false
#| out-width: 100%
#| echo: false

library(ggeffects)
  
df |> 
    distinct(language_ref, dictionary_translation) |> 
    count(language_ref) |> 
    rename(x = language_ref,
           word_list_size = n) ->
    word_list_size
  
fit |> 
  ggpredict(terms = c("language_ref", "time_of_borrowing")) |> 
  as_tibble() |>
  left_join(word_list_size) |> 
  mutate(x = str_c(x, " (", word_list_size, " lemmata)"),
         x = fct_reorder(x, predicted)) |> 
  ggplot(aes(predicted, x, color = group))+
  geom_linerange(aes(xmin = conf.low, xmax = conf.high), position = position_dodge(width = 0.5)) +
  geom_point(show.legend = FALSE, position = position_dodge(width = 0.5))+
  theme_minimal()+
  labs(x = "model prediction of the probability of change", 
       y = NULL,
       color = NULL)+
  theme(text = element_text(size = 16),
        legend.position = "bottom") ->
  model_predictions

ggsave("model_predictions.png", 
       model_predictions,
       width = 12, height = 9, bg = "white")
knitr::include_graphics("model_predictions.png")
```

## Packages

In the following table, we list all R packages and R version used in the project:

```{r}
#| warning: false
#| echo: false
#| tbl-cap: "The list of versions of R packages used in the project"

packages <- c("quarto", "tidyverse", "inspectdf", "lme4", "ggeffects")
map(packages, function(i){
  tibble(package = i,
         version = as.character(packageVersion(i)),
         citation = str_c(unlist(citation(i))[["author.family"]], " (",
                          unlist(citation(i))[["year"]], ")"))}) |> 
  list_rbind() |> 
  arrange(package)  |> 
  bind_rows(tibble(package = "R",
                   version = str_c(sessionInfo()$R.version$major, ".",
                                   sessionInfo()$R.version$minor),
                   citation = str_c(unlist(citation())[["author.given"]], " (",
                          unlist(citation())[["year"]], ")")))
```
